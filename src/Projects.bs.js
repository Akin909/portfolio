// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Utils$Portfolio = require("./Utils.bs.js");
var CommonStyles$Portfolio = require("./CommonStyles.bs.js");

var hpo = require("./assets/hpo.png");

var onivim = require("./assets/oni-logo.png");

var component = ReasonReact.statelessComponent("Projects");

var projectContainer = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.flexDirection(Css.column),
        /* :: */[
          Css.justifyContent(Css.spaceAround),
          /* :: */[
            Css.alignItems(Css.center),
            /* :: */[
              Css.width(/* `percent */[
                    -119887163,
                    100
                  ]),
              /* :: */[
                Css.overflow(Css.scroll),
                /* :: */[
                  Css.height(Css.auto),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var image = Css.style(/* :: */[
      Css.width(Css.em(10)),
      /* :: */[
        Css.height(Css.auto),
        /* :: */[
          Css.margin(Css.em(1)),
          /* :: */[
            Css.$$float(/* left */-944764921),
            /* [] */0
          ]
        ]
      ]
    ]);

var projectDetails = Css.style(/* :: */[
      Css.lineHeight(1.5),
      /* [] */0
    ]);

var projectLine = Css.style(/* :: */[
      Css.display(Css.block),
      /* [] */0
    ]);

var projectIntro = Css.style(/* :: */[
      Css.fontStyle(Css.italic),
      /* :: */[
        Css.fontWeight(800),
        /* [] */0
      ]
    ]);

var Styles = /* module */[
  /* projectContainer */projectContainer,
  /* image */image,
  /* projectDetails */projectDetails,
  /* projectLine */projectLine,
  /* projectIntro */projectIntro
];

var card = Css.style(/* :: */[
      Css.width(/* `percent */[
            -119887163,
            50
          ]),
      /* :: */[
        Css.backgroundColor(Css.whitesmoke),
        /* :: */[
          Css.height(Css.auto),
          /* :: */[
            Css.marginTop(Css.em(1)),
            /* :: */[
              Css.marginBottom(Css.em(1)),
              /* :: */[
                Css.borderRadius(Css.px(8)),
                /* :: */[
                  Css.color(Css.black),
                  /* :: */[
                    Css.padding(Css.em(1.5)),
                    /* :: */[
                      Css.fontSize(Css.rem(1.2)),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var cardTitle = Css.style(/* :: */[
      Css.margin(Css.em(0.2)),
      /* [] */0
    ]);

var component$1 = ReasonReact.statelessComponent("Card");

function make(title, children) {
  var newrecord = component$1.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("article", {
                  className: card
                }, React.createElement("h1", {
                      className: cardTitle
                    }, Utils$Portfolio.str(title)), children);
    });
  return newrecord;
}

var Card = /* module */[
  /* card */card,
  /* cardTitle */cardTitle,
  /* component */component$1,
  /* make */make
];

function renderText(details) {
  return $$Array.mapi((function (index, line) {
                return React.createElement("span", {
                            key: String(index),
                            className: projectLine
                          }, Utils$Portfolio.str(line));
              }), details);
}

var oniDetails = /* array */[
  "I collaborate on the Onivim project on github.",
  "Oni is an attempt to modernise modal editing using vim.",
  "Whilst taking inspiration from more modern editors like VSCode and Atom.",
  "As a collaborator I triage and respond to issues, contribute new functionality and fix bugs",
  "It uses React, Redux, RxJs, TypeScript, Electron"
];

var phenotypeDetails = /* array */[
  " The object of this project was to create a data visualization of a section of the\n  human phenotype ontology (HPO)",
  " The HPO is fancy term for the classification of human disease, aka the main classification\n    of lungs diseases would be pulmonary pathology and this would then have loads of subclasses\n  ",
  " This involved parsing an enormous OBO file (an obscure academic format for phenotypic data) into\n  json and then rendering this data with a data visualisation library\n    "
];

function make$1() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("div", {
                  className: projectContainer
                }, React.createElement("h1", {
                      className: CommonStyles$Portfolio.pageTitle
                    }, Utils$Portfolio.str("Projects")), ReasonReact.element(/* None */0, /* None */0, make("Onivim", /* array */[
                          React.createElement("img", {
                                className: image,
                                alt: "onivim logo",
                                src: onivim
                              }),
                          React.createElement("article", {
                                className: projectDetails
                              }, React.createElement("p", {
                                    className: projectIntro
                                  }, Utils$Portfolio.str("A Modal Editor for the Modern age")), renderText(oniDetails))
                        ])), ReasonReact.element(/* None */0, /* None */0, make("Human Phenotype Ontology", /* array */[
                          React.createElement("img", {
                                className: image,
                                alt: "onivim logo",
                                src: hpo
                              }),
                          React.createElement("article", {
                                className: projectDetails
                              }, React.createElement("p", {
                                    className: projectIntro
                                  }, Utils$Portfolio.str("A data visualization of the human phenotype ontology")), renderText(phenotypeDetails))
                        ])));
    });
  return newrecord;
}

exports.hpo = hpo;
exports.onivim = onivim;
exports.component = component;
exports.Styles = Styles;
exports.Card = Card;
exports.renderText = renderText;
exports.oniDetails = oniDetails;
exports.phenotypeDetails = phenotypeDetails;
exports.make = make$1;
/* hpo Not a pure module */
